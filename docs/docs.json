{"meta":{"generator":"0.9.0","format":20,"date":1594209036343},"custom":{"general":{"name":"General","files":{"README":{"name":"Welcome","type":"md","content":"<br>\r\n<div align=\"center\">\r\n    <img src=\"https://github.com/camelliajs/camellia/blob/master/icons/camellia.png?raw=true\" height=\"128\" width=\"128\"/>\r\n    <h2>Camellia - AbortController</h2>\r\n    <h6><i>- The library for aborting promises and operations. -</i></h6>\r\n\r\n<p align=\"center\">\r\n    Hi! You've stumbled across our documentations for our implementation of WHATWG's <a href=\"https://dom.spec.whatwg.org/#interface-abortcontroller\">AbortController</a>, or an interface that exists to represent operations that can be aborted. While this package is more necessarily oriented for private-usage with the library, you're free to install and use it if you wish.\r\n</p>\r\n</div>\r\n\r\n###### Installation\r\n```js\r\n    npm install @camelliajs/abort-controller\r\n``` ","path":"docs/general/README.md"}}}},"classes":[{"name":"AbortController","description":"A class to properly abort outlying http requests.","see":["https://dom.spec.whatwg.org/#abortcontroller"],"props":[{"name":"signal","description":"The signal to the abort controller.","type":[[["AbortSignal"]]],"meta":{"line":13,"file":"AbortController.js","path":"lib"}}],"methods":[{"name":"abort","description":"The abort function, to dispatch the abort event to the signal.","returns":[[["void"]]],"meta":{"line":20,"file":"AbortController.js","path":"lib"}}],"meta":{"line":8,"file":"AbortController.js","path":"lib"}},{"name":"AbortSignal","description":"The signal to properly abort connections.","see":["https://dom.spec.whatwg.org/#abortsignal"],"extends":[[["EventTarget"]]],"props":[{"name":"aborted","description":"Whether or not the signal is aborted, or not.","type":[[["boolean"]]],"meta":{"line":16,"file":"AbortSignal.js","path":"lib"}}],"methods":[{"name":"dispatchEvent","description":"Dispatches the abort event.","params":[{"name":"event","type":[[["Object"]]]}],"returns":[[["boolean"]]],"meta":{"line":25,"file":"AbortSignal.js","path":"lib"}},{"name":"toString","description":"Stringifies the signal","returns":[[["string"]]],"meta":{"line":37,"file":"AbortSignal.js","path":"lib"}},{"name":"addEventListener","description":"Adds a new listener for a specific event","inherits":"EventTarget#addEventListener","inherited":true,"params":[{"name":"type","description":"The type of event.","type":[[["string"]]]},{"name":"cb","description":"The callback to the listener.","type":[[["function"]]]}],"returns":[[["Number"]]],"meta":{"line":15,"file":"EventTarget.js","path":"lib"}},{"name":"removeEventListener","description":"Removes a specific listener from an event","inherits":"EventTarget#removeEventListener","inherited":true,"params":[{"name":"type","description":"The type of event.","type":[[["string"]]]},{"name":"cb","description":"The callback to the listener.","type":[[["function"]]]}],"returns":[[["void"]]],"meta":{"line":28,"file":"EventTarget.js","path":"lib"}}],"meta":{"line":9,"file":"AbortSignal.js","path":"lib"}},{"name":"EventTarget","description":"The handler for event listeners","methods":[{"name":"addEventListener","description":"Adds a new listener for a specific event","params":[{"name":"type","description":"The type of event.","type":[[["string"]]]},{"name":"cb","description":"The callback to the listener.","type":[[["function"]]]}],"returns":[[["Number"]]],"meta":{"line":15,"file":"EventTarget.js","path":"lib"}},{"name":"removeEventListener","description":"Removes a specific listener from an event","params":[{"name":"type","description":"The type of event.","type":[[["string"]]]},{"name":"cb","description":"The callback to the listener.","type":[[["function"]]]}],"returns":[[["void"]]],"meta":{"line":28,"file":"EventTarget.js","path":"lib"}},{"name":"dispatchEvent","description":"Dispatches an event.","params":[{"name":"event","type":[[["Object"]]]}],"returns":[[["boolean"]]],"meta":{"line":43,"file":"EventTarget.js","path":"lib"}}],"meta":{"line":5,"file":"EventTarget.js","path":"lib"}}],"interfaces":[],"typedefs":[],"externals":[]}